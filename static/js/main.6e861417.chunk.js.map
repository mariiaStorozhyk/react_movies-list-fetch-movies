{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","props","movies","map","imdbID","FindMovie","onAddMovie","movieIsAdded","setMovieISAdded","useState","title","setTitle","setMovie","search","setSearch","error","setError","findMovie","fetch","then","response","json","Error","getMovie","catch","console","log","htmlFor","type","value","onChange","event","target","id","placeholder","classNames","onClick","undefined","App","setMovies","some","addedMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e861417.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie?.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie?.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie?.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\n\nconst getMovie = (title: string) => {\n  return fetch(`https://www.omdbapi.com/?apikey=1061a671&t=${title}`)\n    .then(response => response.json())\n    .then(response => {\n      if (response.Error) {\n        throw new Error('Error');\n      }\n\n      return response;\n    });\n};\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n  movieIsAdded: boolean;\n  setMovieISAdded: (added: boolean) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie, movieIsAdded, setMovieISAdded }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie>();\n  const [search, setSearch] = useState(false);\n  const [error, setError] = useState(false);\n\n  const findMovie = () => {\n    getMovie(title)\n      .then(response => {\n        setMovie(response);\n        setSearch(false);\n      })\n      .catch(() => {\n        setSearch(false);\n        setError(true);\n      });\n\n    console.log(error);\n  };\n\n  const addMovie = () => {\n    if (movie) {\n      onAddMovie(movie);\n    }\n\n    setTitle('');\n    setMovie(undefined);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(event) => {\n                setMovieISAdded(false);\n                setTitle(event.target.value);\n                setError(false);\n              }}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': error },\n              )}\n            />\n          </div>\n\n          {error ? (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          ) : (\n            <>\n              {search && <p className=\"help\">Loading...</p>}\n            </>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                setSearch(true);\n                findMovie();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovie()}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movieIsAdded && <p className=\"help is-danger\">This movie is alredy added</p>}\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App:React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movieIsAdded, setMovieISAdded] = useState(false);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.some(addedMovie => addedMovie.imdbID === movie.imdbID)) {\n      setMovieISAdded(true);\n    } else {\n      setMovieISAdded(false);\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={addMovie}\n          movieIsAdded={movieIsAdded}\n          setMovieISAdded={setMovieISAdded}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}